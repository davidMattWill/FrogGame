[gd_scene load_steps=21 format=3 uid="uid://b4c6bgsg4h041"]

[ext_resource type="Texture2D" uid="uid://bk0ox2segevp8" path="res://imports/Assets/ground-tiles.png" id="3_7fxmm"]
[ext_resource type="PackedScene" uid="uid://eeopc14vpw7k" path="res://player/player_character.tscn" id="3_sxach"]
[ext_resource type="Texture2D" uid="uid://bs5k763wlp5k8" path="res://imports/Assets/JumpBar/jump_bar_underneat.png" id="4_ogni1"]
[ext_resource type="Texture2D" uid="uid://be10avil15a67" path="res://imports/Assets/JumpBar/jump_bar_border.png" id="4_qalcr"]
[ext_resource type="Texture2D" uid="uid://n1hm27rl734l" path="res://imports/Assets/stalk-sheet.png" id="4_xs6k0"]
[ext_resource type="Texture2D" uid="uid://bhn1ssp8dbul1" path="res://imports/Assets/JumpBar/jump_bar_progress.png" id="5_akr4a"]
[ext_resource type="Texture2D" uid="uid://ddcekqm4nh1g6" path="res://imports/Assets/platform-sheet-temp.png" id="5_ww87p"]
[ext_resource type="PackedScene" uid="uid://vnpt6csmfly2" path="res://npc/mosquito.tscn" id="7_17rfd"]
[ext_resource type="Texture2D" uid="uid://c6sn2my06k0rp" path="res://imports/Assets/tiles-new.png" id="8_cyb2j"]
[ext_resource type="Script" path="res://Levels/HealthUI_controller.gd" id="8_pbhce"]
[ext_resource type="PackedScene" uid="uid://dyqayj5kpvq5y" path="res://npc/snail.tscn" id="10_8x2u2"]
[ext_resource type="Texture2D" uid="uid://blvn0o06jkf4e" path="res://imports/Player/heart-empty.png" id="10_riaqi"]
[ext_resource type="Texture2D" uid="uid://oo0axtjejaa6" path="res://imports/Player/heart-full.png" id="11_6rtka"]

[sub_resource type="GDScript" id="GDScript_nsevk"]
script/source = "extends CharacterBody2D

# Constants for movement
const SPEED = 120
const JUMP_VELOCITY = -500
const KNOCKBACK_SPEED = 200
const JUMP_FROM_ROLL_VELOCITY = 500 

# Gravity from project settings for consistency with RigidBody nodes
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var direction: Vector2 = Vector2.ZERO
var slide_speed = 120  # Speed of sliding down the slope

# Node references
@onready var animation_tree: AnimationTree = $AnimationTree
@onready var state_machine: AnimationNodeStateMachinePlayback = animation_tree.get(\"parameters/playback\")
@onready var ray: RayCast2D = $RayCast2D
@onready var dust_scene = preload(\"res://player/dust_plume.tscn\")
@onready var jump_bar = $JumpBar

var anim_states = [
	\"idle\", \"hop_ready\", \"hop_up\", 
	\"hop_down\", \"hop_land\", 
	\"ready_roll_backward\", \"roll_backward\", 
	\"ready_roll_forward\", \"roll_forward\",
	\"hit\", \"dead\"]

var anim_conditions = [
	\"fall_from_roll\", \"hop_apex\", 
	\"hop_landing\", \"hop_start\", 
	\"jump_from_roll\", \"player_dead\", 
	\"player_dead_reset\", \"player_hit\", 
	\"roll_backward\", \"roll_forward\", \"hop_released\"]

# State flags
var getting_ready_to_hop: bool = false
var ready_to_hop: bool = false
var ready_to_land: bool = false
var landing: bool = false
var is_attacked: bool = false
var is_on_slope: bool = false
var jumping_from_roll: bool = false


var space_held: bool = false
var space_released: bool = false
var hold_time = 0.0
var max_hold_time = 0.5

signal health_changed(value)
var playerhealth = 3



func _ready():
	# Initialize animation tree and connect signal
	animation_tree.active = true
	animation_tree.connect(\"animation_finished\", _on_animation_finished)
	jump_bar.visible = false

func _process(delta):
	# Update animation parameters each frame
	update_animation_parameters(delta)
	#print_flags()


func print_flags():
	print(\"getting ready to hop: \", getting_ready_to_hop)
	print(\"ready to hop: \", ready_to_hop)
	print(\"ready to land:\", ready_to_land)
	print(\"landing: \", landing)
	print(\"is on slope: \", is_on_slope)

func _physics_process(delta):
	# Get movement input
	direction = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\").normalized()
	
	if space_held:
		hold_time += delta
		hold_time = min(hold_time, max_hold_time)
		jump_bar.value = (hold_time / max_hold_time) * 100
		
	# Apply gravity when not on floor
	if not is_on_floor():
		velocity.y += gravity * delta
	
	# Perform jump when ready
	if ready_to_hop and space_released:
		velocity.y = JUMP_VELOCITY * (hold_time / max_hold_time)
		ready_to_hop = false
		space_released = false
		_set_animation_conditions_true(['hop_released'])
	
	# Handle horizontal movement
	if direction != Vector2.ZERO and not landing and not getting_ready_to_hop and not is_attacked and not is_on_slope and not jumping_from_roll:
		velocity.x = direction.x * SPEED
	else:
		if not is_attacked and not jumping_from_roll:
			velocity.x = move_toward(velocity.x, 0, SPEED * delta)
	if is_on_floor() and not is_attacked and not is_on_slope:
		velocity.x = 0
		
	if is_on_floor() and is_attacked:
		var frames: Sprite2D = $player_frames
		#make player fall in correct direction with correct orientation
		if !frames.flip_h:
			velocity = Vector2(-KNOCKBACK_SPEED, -KNOCKBACK_SPEED)
		else:
			velocity = Vector2(KNOCKBACK_SPEED, -KNOCKBACK_SPEED)
	
	if is_on_slope and jumping_from_roll:
		var wall_normal = get_wall_normal()
		velocity = wall_normal.normalized() * JUMP_FROM_ROLL_VELOCITY
		animation_tree[\"parameters/\" + \"hop_up\" + \"/blend_position\"] = wall_normal
		
	# Apply movement
	move_and_slide()

# Helper to reset and set animation conditions
func _set_animation_conditions_true(conditions: Array):
	#clear all animation conditions
	for condition in anim_conditions:
		animation_tree.set(\"parameters/conditions/\" + condition, false)
	if conditions.is_empty():
		return
	#set passed conditions to tryue
	for condition in conditions:
		if condition in anim_conditions:
			animation_tree.set(\"parameters/conditions/\" + condition, true)
			
# Update animation parameters and states
func update_animation_parameters(delta):
	# Update blend positions for all animations if moving and not in specific states
	if direction != Vector2.ZERO and not getting_ready_to_hop and not landing and not is_on_slope and not jumping_from_roll:
		for state in anim_states:
			animation_tree[\"parameters/\" + state + \"/blend_position\"] = direction
		ray.rotation = -direction.x * 45

		# Handle slope landing
	if is_on_floor():
		var floor_normal = get_floor_normal()
		if floor_normal == Vector2.UP:
			is_on_slope = false
			jumping_from_roll = false
			if Input.is_action_just_pressed(\"ui_accept\") and not landing and not space_held and not is_attacked:
				_set_animation_conditions_true([\"hop_start\"])
				getting_ready_to_hop = true
				#initiate the jump sequence
				space_held = true
				hold_time = 0.0
				jump_bar.visible = true
			
			if ready_to_land and not is_attacked:
				_set_animation_conditions_true([\"hop_landing\"])
				ready_to_land = false
				landing = true
				
				# Spawn dust effect
				var dust = dust_scene.instantiate()
				dust.global_position = $Marker2D.global_position
				get_parent().add_child(dust)
			
			if is_on_floor() and is_attacked:
				_set_animation_conditions_true([\"player_dead\"])
				is_attacked = false

	if is_on_wall_only() and velocity.y > 0:
		var wall_normal = get_wall_normal()
		var wall_angle = wall_normal.angle()
		var angle_deg = rad_to_deg(wall_angle)
		#meaning we're on a slope
		print(angle_deg)
		if (angle_deg < -40 and angle_deg > -50) or (angle_deg < -130 and angle_deg > -140):
			if not is_on_slope and jumping_from_roll:
				jumping_from_roll = false
			is_on_slope = true
			if ray.is_colliding():
				_set_animation_conditions_true([\"roll_backward\"])
			else:
				_set_animation_conditions_true([\"roll_forward\"])
		
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_slope:
		jumping_from_roll = true
		_set_animation_conditions_true([\"jump_from_roll\"])
			
	
	if Input.is_action_just_released(\"ui_accept\") and space_held:
		space_held = false
		space_released = true
		jump_bar.visible = false
		
	# Handle falling and apex
	if not is_on_floor() and not is_on_wall():
		is_on_slope = false
		if not is_attacked:
			if velocity.y > 0: 
				_set_animation_conditions_true([\"hop_apex\", \"fall_from_roll\"])
			ready_to_land = true
	

func _on_animation_finished(anim: String):
	if anim in [\"hop_ready_l\", \"hop_ready_r\"]:
		getting_ready_to_hop = false
		ready_to_hop = true
	
	if anim in [\"hop_land_l\", \"hop_land_r\"]:
		landing = false


func _on_player_attacked():
	if not is_attacked:
		is_attacked = true
		var frames: Sprite2D = $player_frames
		#make player fall in correct direction with correct orientation
		if !frames.flip_h:
			animation_tree[\"parameters/\" + \"hit\" + \"/blend_position\"] = Vector2(1,0)
			animation_tree[\"parameters/\" + \"dead\" + \"/blend_position\"] = Vector2(1,0)
		else:
			animation_tree[\"parameters/\" + \"hit\" + \"/blend_position\"] = Vector2(-1,0)
			animation_tree[\"parameters/\" + \"dead\" + \"/blend_position\"] = Vector2(-1,0)
		
		playerhealth = playerhealth - 1
		emit_signal(\"health_changed\", playerhealth)
		_set_animation_conditions_true([\"player_hit\"])

	
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_eomdq"]
size = Vector2(17, 12)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_qykg7"]
texture = ExtResource("3_7fxmm")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_6fh45"]
texture = ExtResource("4_xs6k0")
texture_region_size = Vector2i(32, 32)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
0:0/next_alternative_id = 2
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_pll8c"]
texture = ExtResource("5_ww87p")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, 0, 16, 0, 16, 4.5, -16, 4.5)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, 0, 16, 0, 16, 4.5, -16, 4.5)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, 0, 16, 0, 16, 4.5, -16, 4.5)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, 0, 16, 0, 16, 4.5, -16, 4.5)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -0.5, 16, 0, 16, 5.5, -16, 5.5)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, 0, 16, 0, 16, 5.5, -16, 5.5)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_5m2gc"]
texture = ExtResource("8_cyb2j")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(16, -16, 16, 16, -16, 16)
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
0:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, 16, -16, 16)

[sub_resource type="TileSet" id="TileSet_6pek7"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_qykg7")
sources/1 = SubResource("TileSetAtlasSource_6fh45")
sources/2 = SubResource("TileSetAtlasSource_pll8c")
sources/3 = SubResource("TileSetAtlasSource_5m2gc")

[node name="main_level" type="Node2D"]

[node name="PlayerCharacter" parent="." instance=ExtResource("3_sxach")]
position = Vector2(280, 258)
floor_stop_on_slope = false
floor_max_angle = 0.436332
script = SubResource("GDScript_nsevk")

[node name="Camera2D" type="Camera2D" parent="PlayerCharacter"]

[node name="Area2D" type="Area2D" parent="PlayerCharacter"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerCharacter/Area2D"]
position = Vector2(0.5, 0)
shape = SubResource("RectangleShape2D_eomdq")

[node name="JumpBar" type="TextureProgressBar" parent="PlayerCharacter"]
offset_left = -16.0
offset_top = -16.0
offset_right = 16.0
offset_bottom = -8.0
texture_under = ExtResource("4_ogni1")
texture_over = ExtResource("4_qalcr")
texture_progress = ExtResource("5_akr4a")

[node name="TileMap" type="TileMap" parent="."]
texture_filter = 1
position = Vector2(289, 232)
tile_set = SubResource("TileSet_6pek7")
format = 2
layer_0/tile_data = PackedInt32Array(65536, 131072, 1, 65537, 65536, 1, 65539, 65536, 1, 131071, 65536, 1, 131070, 0, 1, 131069, 0, 1, 65538, 65536, 1, -720902, 131072, 2, -2162684, 131074, 0, -2162683, 131074, 0, -2424817, 131074, 0, -2424816, 131074, 0, -3080199, 65536, 1, -3538965, 65536, 0, -3670017, 0, 1, -3735552, 131072, 1, -3735551, 0, 1, -4063239, 65538, 0, -4063238, 65538, 0, -4063237, 65538, 0, -4456447, 65538, 0, -4456446, 65538, 0, -4456445, 65538, 0, -5046266, 65538, 0, -5046265, 65538, 0, -5046264, 65538, 0, -5832702, 65538, 0, -5832701, 65538, 0, -6094859, 65538, 0, -6094858, 65538, 0, -6094857, 65538, 1, -3604501, 196608, 0, -3604500, 131072, 1, -3604499, 131072, 1, -3604498, 131072, 1, -3604497, 131072, 1, -3604496, 196608, 1, -3538960, 131072, 2, -3473424, 131072, 2, -3407888, 131072, 2, -3342357, 196608, 3, -3342352, 196608, 2, -3342356, 131072, 3, -3342355, 0, 3, -3342354, 0, 3, -3342353, 0, 3, -3407893, 65536, 0, -3473429, 65536, 0, -3080198, 65536, 1, -3080197, 196608, 1, -3014661, 196608, 2, -3014662, 131072, 3, -3014663, 131072, 3, -3014664, 196608, 3, -3080200, 196608, 0, -3735550, 65536, 1, -3670018, 196608, 0, -3735549, 196608, 1, -3604482, 196608, 3, -3604481, 0, 3, -3670016, 131072, 3, -3670015, 131072, 3, -3670014, 65536, 3, -3670013, 196608, 2, -3670037, 1, 3, -3801085, 1, 3, -3735553, 65537, 1, -3801089, 65537, 0, -3211270, 65537, 2, -3145734, 65537, 3, -1114129, 65536, 1, -1114128, 131072, 1, -1114127, 0, 1, -1114126, 65536, 1, -1114125, 131072, 1, -1048594, 0, 0, -983058, 131072, 0, -393234, 0, 0, -1114130, 196608, 0, -1114118, 196608, 1, -1048582, 131072, 2, -983046, 131072, 2, -917510, 131072, 2, -851974, 131072, 2, -786438, 131072, 2, -655366, 131072, 2, -589830, 131072, 2, -524294, 131072, 2, -458758, 131072, 2, -393222, 131072, 2, -1114119, 65536, 1, -1114120, 65536, 1, -1114121, 65536, 1, -1114122, 65536, 1, -1114123, 65536, 1, -1114124, 65536, 1, -1245202, 65537, 0, -1179666, 65537, 1, -6422545, 0, 3, -6422544, 65536, 3, -6422543, 131072, 3, -6422546, 196608, 3, -6422542, 196608, 2, -6488082, 196608, 0, -6488081, 0, 1, -6488080, 0, 1, -6488079, 0, 1, -6488078, 196608, 1, -6553618, 1, 3, -6619150, 65537, 0, -6553614, 65537, 1, -3407856, 196608, 0, -3342320, 196608, 3, -3407855, 65536, 1, -3342319, 131072, 3, -3407854, 65536, 1, -3342318, 131072, 3, -3407853, 196608, 1, -3342317, 196608, 2, -5177356, 196608, 0, -5111820, 196608, 3, -5177355, 65536, 1, -5111819, 131072, 3, -5177354, 65536, 1, -5111818, 131072, 3, -5177353, 196608, 1, -5111817, 196608, 2, -6291453, 196608, 0, -6225917, 196608, 3, -6291452, 65536, 1, -6225916, 131072, 3, -6291451, 65536, 1, -6225915, 131072, 3, -6291450, 196608, 1, -6225914, 196608, 2, -2424851, 196608, 0, -2359315, 196608, 3, -2424850, 0, 1, -2359314, 0, 3, -2424849, 65536, 1, -2359313, 65536, 3, -2424848, 131072, 1, -2359312, 131072, 3, -2424847, 196608, 1, -2359311, 196608, 2, -65534, 65537, 0, 2, 65537, 1, -917506, 65538, 1, -917505, 2, 1, -983040, 2, 0, 131068, 0, 1, 131067, 0, 1, -1835018, 65538, 0, -1835017, 65538, 0, -1835016, 65538, 0, -1835015, 65538, 0, -1835014, 65538, 0, -1835013, 65538, 0, -1048593, 262147, 0, -1048592, 262147, 3, -1048591, 262147, 2, -1048590, 262147, 0, -1048589, 262147, 3, -1048588, 262147, 0, -1048587, 262147, 0, -1048586, 262147, 1, -1048585, 262147, 1, -1048584, 262147, 1, -1048583, 262147, 0, -983047, 262147, 2, -983048, 262147, 0, -983049, 262147, 2, -983050, 262147, 2, -983051, 262147, 3, -983052, 262147, 0, -983053, 262147, 2, -983054, 262147, 1, -983055, 262147, 3, -983056, 262147, 2, -917520, 262147, 3, -917521, 262147, 2, -983057, 262147, 1, -917519, 262147, 1, -917518, 262147, 0, -917517, 262147, 1, -917516, 262147, 1, -917515, 262147, 3, -917514, 262147, 2, -917513, 262147, 1, -917512, 262147, 2, -917511, 262147, 2, -851975, 262147, 2, -851976, 262147, 3, -851977, 262147, 0, -851978, 262147, 3, -851979, 262147, 2, -851980, 262147, 2, -851981, 262147, 1, -851982, 262147, 0, -851983, 262147, 0, -851984, 262147, 0, -786448, 262147, 0, -786447, 262147, 3, -786446, 262147, 1, -786445, 262147, 2, -786444, 262147, 1, -786443, 262147, 3, -786442, 262147, 2, -786441, 262147, 0, -786440, 262147, 0, -786439, 262147, 1, -720903, 262147, 3, -720904, 262147, 1, -720905, 262147, 2, -720906, 262147, 1, -720907, 262147, 3, -720908, 262147, 1, -720909, 262147, 0, -720910, 262147, 3, -720911, 262147, 0, -655375, 262147, 0, -655374, 262147, 1, -655373, 262147, 0, -655372, 262147, 1, -655371, 262147, 1, -655370, 262147, 2, -655369, 262147, 2, -655368, 262147, 0, -655367, 262147, 3, -589831, 262147, 0, -589832, 262147, 3, -589833, 262147, 2, -589834, 262147, 1, -589835, 262147, 1, -589836, 262147, 0, -589837, 262147, 1, -589838, 262147, 1, -589839, 262147, 0, -524303, 262147, 2, -524302, 262147, 3, -524301, 262147, 2, -524300, 262147, 2, -524299, 262147, 3, -524298, 262147, 2, -524297, 262147, 1, -524296, 262147, 3, -524295, 262147, 1, -458759, 262147, 2, -393223, 262147, 0, -393224, 262147, 2, -458761, 262147, 1, -458762, 262147, 1, -458763, 262147, 0, -458764, 262147, 0, -458765, 262147, 2, -458766, 262147, 0, -458767, 262147, 2, -458760, 262147, 2, -393233, 262147, 2, -393231, 262147, 3, -393230, 262147, 3, -393229, 262147, 2, -393228, 262147, 0, -393227, 262147, 3, -393226, 262147, 3, -393225, 262147, 0, -327698, 196611, 3, -327697, 3, 3, -327696, 3, 3, -327695, 131075, 3, -327694, 3, 3, -327693, 131075, 3, -327692, 131075, 3, -327691, 3, 3, -327690, 65539, 3, -327689, 3, 3, -327688, 3, 3, -327687, 65539, 3, -327686, 196611, 2, 65530, 131075, 7, -7, 131075, 7, -65544, 131075, 7, -65545, 65539, 1, -65546, 65539, 1, -65547, 65539, 1, -65550, 65539, 1, -65551, 65539, 1, -65548, 131075, 1, -65549, 131075, 1, -65552, 3, 1, -65553, 65539, 1, -65554, 131075, 1, -65555, 131075, 1, -65556, 65539, 1, -65557, 65539, 1, -65558, 65539, 1, -65559, 65539, 1, -131096, 65539, 7, -196633, 65539, 7, -262170, 65539, 7, -327707, 65539, 7, -393244, 131075, 2, -458780, 131075, 2, -524316, 131075, 2, -589852, 65539, 2, -655388, 3, 2, -720924, 3, 2, -786460, 131075, 2, -851996, 131075, 2, -917532, 262147, 3, -983068, 262147, 3, -1048604, 262147, 0, -458770, 196611, 4, -524305, 196611, 4, -589840, 196611, 4, -655386, 65538, 0, -655385, 196610, 0, -655384, 196610, 0, -655383, 2, 0, 5, 3, 4, -65530, 3, 4, -262135, 3, 4, -327670, 3, 4, -393205, 65539, 4, -393204, 196611, 1, -524272, 196611, 0, -589807, 131075, 0, -655343, 131075, 0, -720879, 131075, 0, -786415, 131075, 0, -851951, 131075, 0, -917487, 131075, 0, -983023, 131075, 0, -1048560, 196611, 3, -1114097, 196611, 3, -1179634, 131075, 3, -1179635, 3, 3, -1245172, 3, 0, -1441780, 131075, 0, -1507316, 3, 0, -1572852, 3, 0, -1638388, 3, 0, -1703924, 65539, 0, -1769460, 131075, 0, -1834996, 3, 0, -1179636, 196611, 3, -1376244, 131075, 0, -1310708, 65539, 0, -655351, 3, 6, -720886, 3, 5, -786421, 65539, 5, -720885, 262147, 2, -655350, 262147, 0, -589814, 196611, 3, -589813, 65539, 3, -589812, 3, 3, -589811, 196611, 2, -655347, 131075, 2, -720883, 196611, 1, -786420, 196611, 1, -720884, 262147, 2, -655348, 262147, 3, -655349, 262147, 3, -1441814, 65539, 7, -1507351, 65539, 7, -1572888, 65539, 7, -1638425, 65539, 7, -1376277, 65539, 7, -1310740, 65539, 7, -1245204, 196611, 2, -1179669, 196611, 2, -1114134, 196611, 2, -1114135, 3, 3, -1114136, 65539, 3, -1114137, 131075, 3, -1114138, 3, 3, -1114139, 262147, 0, -1638426, 65539, 1, -1638427, 3, 1, -1638428, 65539, 1, -1638429, 65539, 1, -1703966, 262147, 0, -1769502, 262147, 2, -1835038, 262147, 3, -1900574, 131075, 2, -1966110, 65539, 2, -2031646, 3, 2, -2097182, 3, 2, -2162718, 65539, 2, -2228254, 131075, 2, -2293790, 65539, 2, -458768, 262147, 0, -393232, 262147, 2, -524304, 262147, 0, -458769, 262147, 1, 131076, 262147, 2, 131075, 262147, 3, 131074, 262147, 0, 131073, 262147, 2, 131072, 262147, 2, 196607, 262147, 3, 196606, 262147, 3, 196605, 262147, 3, 196604, 262147, 3, 196603, 262147, 3, 196602, 262147, 0, 131066, 262147, 0, 131065, 262147, 3, 65529, 262147, 0, 65528, 262147, 0, 65540, 131075, 1, 6, 262147, 0, 65541, 262147, 0, -65529, 131075, 1, -262134, 262147, 2, -327668, 262147, 3, -327669, 262147, 2, -327667, 196611, 1, -262131, 262147, 3, -262132, 262147, 1, -262133, 262147, 2, -196597, 262147, 0, -196598, 262147, 2, -65527, 131075, 1, -65528, 131075, 1, 8, 262147, 3, 7, 262147, 0, 65542, 262147, 0, 65543, 262147, 0, 65544, 262147, 1, 65545, 262147, 3, 9, 262147, 3, 10, 262147, 3, -65526, 131075, 1, -65525, 131075, 1, -196596, 262147, 3, -196595, 262147, 1, -65524, 131075, 1, 11, 262147, 1, 65546, 262147, 1, 65547, 262147, 0, 65548, 262147, 3, 13, 262147, 1, 14, 262147, 0, -65522, 131075, 1, -65523, 131075, 1, 12, 262147, 2, 65549, 262147, 2, 65550, 262147, 3, 65551, 262147, 2, 15, 262147, 0, -393200, 131075, 0, -458736, 65539, 0, -458735, 262147, 1, -524271, 262147, 0, -524270, 262147, 0, -589805, 262147, 3, -1245170, 262147, 0, -1245169, 262147, 1, -1179633, 262147, 1, -1179632, 262147, 0, -1114096, 262147, 0, -1114095, 262147, 3, -1048559, 262147, 1, -1048558, 262147, 2, -983022, 262147, 1, -917486, 262147, 0, -851950, 262147, 2, -786414, 262147, 2, -720878, 262147, 1, -655342, 262147, 2, -589806, 262147, 2, -524269, 262147, 0, -655341, 262147, 2, -720877, 262147, 3, -786413, 262147, 3, -851949, 262147, 0, -917485, 262147, 3, -983021, 262147, 0, -1048557, 262147, 3, -1114093, 262147, 2, -1114094, 262147, 1, -1179631, 262147, 3, -1310706, 262147, 1, -1376242, 262147, 2, -1376243, 262147, 2, -1441779, 262147, 1, -1310707, 262147, 0, -1245171, 262147, 2, -1507315, 262147, 0, -1572851, 262147, 1, -1638387, 262147, 1, -1703923, 262147, 2, -1769459, 262147, 2, -1834995, 262147, 2, 131077, 262147, 3, 131078, 262147, 1, 131079, 262147, 3, 131080, 262147, 0, 131081, 262147, 0, 131082, 262147, 1, 131083, 262147, 2, 131084, 262147, 0, 131085, 262147, 1, 131086, 262147, 0, 131087, 262147, 3, 196621, 262147, 0, 196620, 262147, 0, 196619, 262147, 2, 196618, 262147, 0, 196617, 262147, 3, 196616, 262147, 0, 196614, 262147, 0, 196613, 262147, 2, 196612, 262147, 1, 196611, 262147, 1, 262151, 262147, 0, 262152, 262147, 2, 196615, 262147, 2, 196622, 262147, 1, 196623, 262147, 2, 196610, 262147, 1, 196609, 262147, 2, 196608, 262147, 0, 262143, 262147, 1, 262142, 262147, 3, 262141, 262147, 3, 262140, 262147, 1, 262139, 262147, 1, 262138, 262147, 3, 262137, 262147, 3, 262136, 262147, 1, 262135, 262147, 0, 196601, 262147, 2, 196600, 262147, 2, 131064, 262147, 0, 65527, 262147, 1, -9, 262147, 2, -8, 262147, 1, -10, 262147, 1, -11, 262147, 1, -12, 262147, 2, -13, 262147, 2, -14, 262147, 0, -15, 262147, 1, -16, 262147, 2, -17, 262147, 3, -18, 262147, 1, -19, 262147, 1, -20, 262147, 3, -21, 262147, 1, -22, 262147, 1, -23, 262147, 2, 65513, 262147, 3, 65514, 262147, 2, 65515, 262147, 1, 65516, 262147, 1, 131053, 262147, 0, 131054, 262147, 1, 131055, 262147, 3, 131056, 262147, 0, 131057, 262147, 2, 131058, 262147, 2, 131059, 262147, 2, 131060, 262147, 1, 131061, 262147, 3, 65525, 262147, 2, 65526, 262147, 0, 65524, 262147, 1, 65523, 262147, 1, 65522, 262147, 0, 65521, 262147, 3, 65520, 262147, 0, 65519, 262147, 0, 65518, 262147, 3, 65517, 262147, 0, 131052, 262147, 3, 131051, 262147, 3, 131062, 262147, 1, 131063, 262147, 0, 131050, 262147, 2, 196586, 262147, 1, 196585, 262147, 0, 196584, 262147, 0, 131048, 262147, 1, 131049, 262147, 2, 196590, 262147, 0, 196591, 262147, 1, 196592, 262147, 3, 196593, 262147, 2, 196589, 262147, 1, 196588, 262147, 0, 196587, 262147, 2, 262127, 262147, 2, 262128, 262147, 2, 262129, 262147, 0, 196594, 262147, 1, 196595, 262147, 3, 196596, 262147, 3, 196597, 262147, 2, 196598, 262147, 0, 196599, 262147, 0, 262134, 262147, 3, 262133, 262147, 1, 262132, 262147, 0, 262131, 262147, 2, 262130, 262147, 3, 262126, 262147, 3, 262125, 262147, 2, 262124, 262147, 1, 262123, 262147, 2, 262122, 262147, 1, 262121, 262147, 0, 262120, 262147, 1, 262119, 262147, 2, 196583, 262147, 2, 131047, 262147, 3, 65512, 262147, 3, -24, 262147, 2, -65560, 262147, 0, -131098, 262147, 3, -131097, 262147, 1, -65561, 262147, 1, -196634, 262147, 1, -262171, 262147, 3, -327708, 262147, 1, -262172, 262147, 2, -196635, 262147, 0, -131099, 262147, 0, -65562, 262147, 2, -26, 262147, 2, -393245, 262147, 2, -327709, 262147, 2, -262173, 262147, 1, -196637, 262147, 0, -196636, 262147, 3, -131100, 262147, 1, -25, 262147, 1, 65511, 262147, 2, -65563, 262147, 2, -131101, 262147, 3, -196638, 262147, 2, -131102, 262147, 2, -65564, 262147, 1, -27, 262147, 0, 65510, 262147, 2, -65565, 262147, 2, -65566, 262147, 1, -29, 262147, 1, -28, 262147, 2, 65509, 262147, 0, 131046, 262147, 0, -30, 262147, 3, 65506, 262147, 3, 131043, 262147, 0, 131044, 262147, 3, 196581, 262147, 0, 196582, 262147, 0, 262118, 262147, 1, 131045, 262147, 1, 65508, 262147, 0, 65507, 262147, 1, 327656, 262147, 2, 327655, 262147, 1, 327654, 262147, 1, 262117, 262147, 1, 262116, 262147, 2, 196580, 262147, 2, 196579, 262147, 1, 327657, 262147, 1, 327658, 262147, 0, 327659, 262147, 3, 327660, 262147, 2, 327661, 262147, 2, 327662, 262147, 1, 327663, 262147, 3, 327664, 262147, 1, 327665, 262147, 1, 393202, 262147, 0, 327666, 262147, 0, 327667, 262147, 2, 393203, 262147, 0, 393201, 262147, 0, 393200, 262147, 3, 393199, 262147, 0, 393198, 262147, 0, 393197, 262147, 2, 393196, 262147, 2, 393195, 262147, 3, 458738, 262147, 1, 458739, 262147, 2, 458740, 262147, 3, 458741, 262147, 1, 458742, 262147, 1, 393207, 262147, 2, 393208, 262147, 3, 393206, 262147, 3, 327669, 262147, 2, 327668, 262147, 2, 393205, 262147, 2, 458744, 262147, 1, 458745, 262147, 1, 458746, 262147, 3, 458747, 262147, 1, 458748, 262147, 2, 393209, 262147, 3, 327670, 262147, 3, 393204, 262147, 1, 327671, 262147, 2, 327672, 262147, 0, 327673, 262147, 3, 327674, 262147, 0, 327675, 262147, 2, 327676, 262147, 3, 327677, 262147, 0, 393210, 262147, 3, 393211, 262147, 3, 393212, 262147, 3, 393213, 262147, 2, 393214, 262147, 3, 393215, 262147, 3, 327680, 262147, 2, 327681, 262147, 3, 327682, 262147, 3, 327683, 262147, 1, 393219, 262147, 1, 262146, 262147, 2, 262145, 262147, 1, 262144, 262147, 0, 327679, 262147, 0, 327678, 262147, 3, 327684, 262147, 1, 327685, 262147, 3, 327686, 262147, 3, 327687, 262147, 2, 327688, 262147, 0, 327689, 262147, 1, 262153, 262147, 0, 262150, 262147, 1, 262149, 262147, 0, 262148, 262147, 0, 262147, 262147, 1, 327690, 262147, 2, 327691, 262147, 2, 327692, 262147, 2, 458749, 262147, 2, 458750, 262147, 0, 458751, 262147, 0, 393216, 262147, 3, 458743, 262147, 0, 458736, 262147, 1, 458737, 262147, 3, 393194, 262147, 0, 458733, 262147, 2, 458734, 262147, 0, 458735, 262147, 0, 524274, 262147, 0, 524275, 262147, 2, 524276, 262147, 0, 524277, 262147, 2, 524278, 262147, 1, 589815, 262147, 2, 589816, 262147, 3, 589817, 262147, 1, 524280, 262147, 3, 524279, 262147, 3, 458732, 262147, 0, 458731, 262147, 2, 458730, 262147, 3, 393193, 262147, 1, 393192, 262147, 1, 458728, 262147, 0, 458729, 262147, 0, 393191, 262147, 2, 524282, 262147, 2, 589818, 262147, 3, 524281, 262147, 1, 524283, 262147, 0, 524284, 262147, 3, 524285, 262147, 1, 524286, 262147, 1, 524287, 262147, 2, 458752, 262147, 0, 458753, 262147, 1, 458754, 262147, 2, 458755, 262147, 0, 393218, 262147, 0, 393217, 262147, 0, 393220, 262147, 3, 393221, 262147, 2, 393222, 262147, 0, 393223, 262147, 1, 393224, 262147, 0, 262154, 262147, 3, 262155, 262147, 3, 327693, 262147, 0, 327694, 262147, 3, 327695, 262147, 0, 262156, 262147, 3, 327696, 262147, 2, 262160, 262147, 3, 196624, 262147, 3, 327697, 262147, 1, 262159, 262147, 1, 262158, 262147, 3, 262157, 262147, 2, 393227, 262147, 1, 393226, 262147, 3, 393225, 262147, 3, 393228, 262147, 0, 393229, 262147, 0, 393230, 262147, 3, 393231, 262147, 2, 262161, 262147, 3, 327698, 262147, 1, 393233, 262147, 0, 393232, 262147, 1, 196625, 262147, 2, 131088, 262147, 2, 65552, 262147, 1, 16, 262147, 1, 131089, 262147, 1, 196626, 262147, 3, 262162, 262147, 3, 262163, 262147, 0, 327699, 262147, 1, -65518, 262147, 3, -65519, 262147, 3, -131055, 262147, 2, -196591, 262147, 3, -262128, 131075, 0, -65520, 262147, 1, -262127, 262147, 2, -327663, 262147, 2, -327662, 262147, 0, -393198, 262147, 3, -393199, 262147, 3, -327664, 65539, 0, -393197, 262147, 0, -458732, 262147, 3, -524268, 262147, 3, -458733, 262147, 2, -458734, 262147, 1, -393196, 262147, 0, -393195, 262147, 3, -393194, 262147, 3, -327661, 262147, 2, -262126, 262147, 3, -262125, 262147, 1, -327660, 262147, 3, -327659, 262147, 3, -262124, 262147, 3, -262123, 262147, 0, -327658, 262147, 0, -196589, 262147, 2, -196590, 262147, 2, -131054, 262147, 1, -196588, 262147, 2, -196587, 262147, 3, -196586, 262147, 2, -131052, 262147, 1, -131053, 262147, 2, 18, 262147, 1, -65517, 262147, 1, -65516, 262147, 2, 17, 262147, 0, 65553, 262147, 3, -131051, 262147, 1, -262122, 262147, 0, -262174, 262147, 2, -327710, 262147, 2, -393246, 262147, 0, -458782, 262147, 3, -524318, 262147, 2, -589854, 262147, 1, -458783, 262147, 0, -393247, 262147, 3, -327711, 262147, 0, -262175, 262147, 1, -196639, 262147, 3, -458781, 262147, 2, -524317, 262147, 3, -589853, 262147, 1, -655389, 262147, 3, -720925, 262147, 2, -524319, 262147, 1, -589855, 262147, 1, -655391, 262147, 1, -720927, 262147, 0, -786462, 262147, 3, -851998, 262147, 1, -917534, 262147, 3, -983070, 262147, 0, -786461, 262147, 1, -655390, 262147, 1, -851997, 262147, 3, -1114140, 262147, 1, -1048605, 262147, 1, -983069, 262147, 0, -917533, 262147, 3, -1048606, 262147, 1, -720926, 262147, 3, -1114152, 262147, 3, -1048616, 262147, 3, -983080, 262147, 2, -917544, 262147, 0, -852008, 262147, 3, -786472, 262147, 0, -720936, 262147, 3, -655400, 262147, 2, -589864, 262147, 2, -524328, 262147, 0, -1114151, 262147, 3, -1048615, 262147, 0, -983079, 262147, 2, -917543, 262147, 2, -852007, 262147, 2, -786471, 262147, 0, -720935, 262147, 1, -655399, 262147, 3, -589863, 262147, 2, -524327, 262147, 3, -1114150, 262147, 3, -1048614, 262147, 0, -983078, 262147, 1, -917542, 262147, 3, -852006, 262147, 2, -786470, 262147, 3, -720934, 262147, 0, -655398, 262147, 2, -589862, 262147, 1, -524326, 262147, 3, -1114149, 262147, 1, -1048613, 262147, 2, -983077, 262147, 3, -917541, 262147, 0, -852005, 262147, 1, -786469, 262147, 0, -720933, 262147, 0, -655397, 262147, 2, -589861, 262147, 1, -524325, 262147, 3, -1114148, 262147, 3, -1048612, 262147, 0, -983076, 262147, 1, -917540, 262147, 1, -852004, 262147, 3, -786468, 262147, 3, -720932, 262147, 2, -655396, 262147, 3, -589860, 262147, 0, -524324, 262147, 0, -1114147, 262147, 3, -1048611, 262147, 0, -983075, 262147, 0, -917539, 262147, 0, -852003, 262147, 1, -786467, 262147, 1, -720931, 262147, 1, -655395, 262147, 2, -589859, 262147, 3, -524323, 262147, 3, -1114146, 262147, 0, -1048610, 262147, 1, -983074, 262147, 2, -917538, 262147, 1, -852002, 262147, 1, -786466, 262147, 0, -720930, 262147, 0, -655394, 262147, 3, -589858, 262147, 2, -524322, 262147, 3, -1114145, 262147, 3, -1048609, 262147, 2, -983073, 262147, 3, -917537, 262147, 3, -852001, 262147, 3, -786465, 262147, 2, -720929, 262147, 1, -655393, 262147, 0, -589857, 262147, 2, -524321, 262147, 0, -1114144, 262147, 3, -1048608, 262147, 3, -983072, 262147, 3, -917536, 262147, 1, -852000, 262147, 3, -786464, 262147, 1, -720928, 262147, 3, -655392, 262147, 3, -589856, 262147, 1, -524320, 262147, 2, -1114143, 262147, 1, -1048607, 262147, 3, -983071, 262147, 0, -917535, 262147, 2, -851999, 262147, 1, -786463, 262147, 1, -458792, 262147, 0, -393256, 262147, 3, -327720, 262147, 3, -262184, 262147, 3, -196648, 262147, 0, -131112, 262147, 0, -65576, 262147, 2, -40, 262147, 0, -458791, 262147, 1, -393255, 262147, 3, -327719, 262147, 1, -262183, 262147, 0, -196647, 262147, 2, -131111, 262147, 1, -65575, 262147, 1, -39, 262147, 2, -458790, 262147, 0, -393254, 262147, 3, -327718, 262147, 0, -262182, 262147, 0, -196646, 262147, 1, -131110, 262147, 0, -65574, 262147, 0, -38, 262147, 0, -458789, 262147, 3, -393253, 262147, 2, -327717, 262147, 3, -262181, 262147, 1, -196645, 262147, 3, -131109, 262147, 3, -65573, 262147, 3, -37, 262147, 2, -458788, 262147, 1, -393252, 262147, 0, -327716, 262147, 2, -262180, 262147, 0, -196644, 262147, 2, -131108, 262147, 3, -65572, 262147, 2, -36, 262147, 0, -458787, 262147, 3, -393251, 262147, 1, -327715, 262147, 3, -262179, 262147, 2, -196643, 262147, 2, -131107, 262147, 1, -65571, 262147, 0, -35, 262147, 3, -458786, 262147, 0, -393250, 262147, 0, -327714, 262147, 0, -262178, 262147, 3, -196642, 262147, 0, -131106, 262147, 2, -65570, 262147, 0, -34, 262147, 0, -458785, 262147, 1, -393249, 262147, 2, -327713, 262147, 3, -262177, 262147, 3, -196641, 262147, 2, -131105, 262147, 3, -65569, 262147, 1, -33, 262147, 1, -458784, 262147, 3, -393248, 262147, 3, -327712, 262147, 0, -262176, 262147, 1, -196640, 262147, 3, -131104, 262147, 0, -65568, 262147, 1, -32, 262147, 0, -131103, 262147, 3, -65567, 262147, 2, -31, 262147, 1, 65500, 262147, 0, 131036, 262147, 0, 196572, 262147, 2, 262108, 262147, 2, 327644, 262147, 2, 393180, 262147, 3, 458716, 262147, 2, 65501, 262147, 0, 131037, 262147, 3, 196573, 262147, 2, 262109, 262147, 0, 327645, 262147, 2, 393181, 262147, 0, 458717, 262147, 2, 65502, 262147, 2, 131038, 262147, 0, 196574, 262147, 2, 262110, 262147, 3, 327646, 262147, 3, 393182, 262147, 1, 458718, 262147, 1, 65503, 262147, 0, 131039, 262147, 3, 196575, 262147, 2, 262111, 262147, 2, 327647, 262147, 1, 393183, 262147, 1, 458719, 262147, 0, 65504, 262147, 3, 131040, 262147, 0, 196576, 262147, 2, 262112, 262147, 2, 327648, 262147, 0, 393184, 262147, 0, 458720, 262147, 0, 65505, 262147, 2, 131041, 262147, 3, 196577, 262147, 2, 262113, 262147, 1, 327649, 262147, 0, 393185, 262147, 1, 458721, 262147, 1, 131042, 262147, 3, 196578, 262147, 2, 262114, 262147, 0, 327650, 262147, 1, 393186, 262147, 2, 458722, 262147, 1, 262115, 262147, 1, 327651, 262147, 1, 393187, 262147, 3, 458723, 262147, 3, 327652, 262147, 0, 393188, 262147, 1, 458724, 262147, 2, 524257, 262147, 2, 524258, 262147, 3, 524259, 262147, 2, 524260, 262147, 0, 327653, 262147, 1, 393189, 262147, 2, 458725, 262147, 0, 524261, 262147, 1, 393190, 262147, 3, 458726, 262147, 3, 524262, 262147, 3, 589797, 262147, 1, 589798, 262147, 3, 458727, 262147, 2, 524263, 262147, 0, 589799, 262147, 3, 524264, 262147, 0, 589800, 262147, 1, 524265, 262147, 0, 589801, 262147, 0, 524266, 262147, 3, 589802, 262147, 2, 524267, 262147, 1, 589803, 262147, 1, 524268, 262147, 1, 589804, 262147, 0, 524269, 262147, 1, 589805, 262147, 3, 655338, 262147, 3, 655339, 262147, 0, 655340, 262147, 3, 655341, 262147, 1, 524270, 262147, 2, 589806, 262147, 2, 655342, 262147, 0, 524271, 262147, 3, 589807, 262147, 3, 655343, 262147, 2, 524272, 262147, 1, 589808, 262147, 0, 655344, 262147, 1, 524273, 262147, 3, 589809, 262147, 1, 655345, 262147, 3, 589810, 262147, 1, 655346, 262147, 2, 589811, 262147, 0, 655347, 262147, 0, 589812, 262147, 0, 655348, 262147, 3, 589813, 262147, 2, 655349, 262147, 1, 589814, 262147, 3, 655350, 262147, 1, 655351, 262147, 0, 655352, 262147, 3, 655353, 262147, 2, 655354, 262147, 2, 589819, 262147, 3, 655355, 262147, 1, 720891, 262147, 1, 589820, 262147, 3, 655356, 262147, 1, 720892, 262147, 2, 589821, 262147, 0, 655357, 262147, 1, 720893, 262147, 3, 589822, 262147, 0, 655358, 262147, 3, 720894, 262147, 3, 589823, 262147, 0, 655359, 262147, 1, 720895, 262147, 1, 524288, 262147, 0, 589824, 262147, 2, 655360, 262147, 1, 524289, 262147, 0, 589825, 262147, 1, 655361, 262147, 2, 524290, 262147, 3, 589826, 262147, 3, 655362, 262147, 3, 524291, 262147, 3, 589827, 262147, 1, 655363, 262147, 0, 458756, 262147, 0, 524292, 262147, 1, 589828, 262147, 1, 655364, 262147, 2, 458757, 262147, 0, 524293, 262147, 2, 589829, 262147, 3, 655365, 262147, 1, 458758, 262147, 0, 524294, 262147, 1, 589830, 262147, 2, 655366, 262147, 2, 458759, 262147, 3, 524295, 262147, 1, 589831, 262147, 2, 655367, 262147, 2, 458760, 262147, 0, 524296, 262147, 3, 589832, 262147, 2, 655368, 262147, 1, -1572895, 262147, 2, -1507359, 262147, 3, -1441823, 262147, 0, -1376287, 262147, 0, -1310751, 262147, 3, -1245215, 262147, 3, -1572894, 262147, 3, -1507358, 262147, 2, -1441822, 262147, 2, -1376286, 262147, 1, -1310750, 262147, 3, -1245214, 262147, 3, -1572893, 262147, 3, -1507357, 262147, 2, -1441821, 262147, 3, -1376285, 262147, 1, -1310749, 262147, 3, -1245213, 262147, 2, -1572892, 262147, 2, -1507356, 262147, 1, -1441820, 262147, 0, -1376284, 262147, 1, -1310748, 262147, 0, -1245212, 262147, 2, -1572891, 262147, 0, -1507355, 262147, 1, -1441819, 262147, 2, -1376283, 262147, 1, -1310747, 262147, 1, -1245211, 262147, 1, -1507354, 262147, 1, -1441818, 262147, 2, -1376282, 262147, 3, -1310746, 262147, 2, -1507353, 262147, 2, -1441817, 262147, 0, -1376281, 262147, 1, -1310745, 262147, 1, -1572890, 262147, 0, -1572889, 262147, 0, -1507352, 262147, 2, -1441815, 262147, 2, -1376278, 262147, 3, -1310741, 262147, 0, -1245205, 262147, 0, -1441816, 262147, 2, -1376280, 262147, 2, -1310744, 262147, 3, -1376279, 262147, 3, -1310743, 262147, 3, -1310742, 262147, 3, -1245206, 262147, 3, -1179671, 262147, 1, -1179670, 262147, 1, -1179675, 262147, 2, -1245210, 262147, 0, -1179674, 262147, 1, -1245209, 262147, 1, -1179673, 262147, 2, -1245208, 262147, 1, -1179672, 262147, 1, -1245207, 262147, 1, -1179680, 262147, 1, -1179679, 262147, 2, -1179678, 262147, 3, -1114142, 262147, 2, -1179677, 262147, 1, -1114141, 262147, 0, -1179676, 262147, 3, -1703975, 262147, 1, -1638439, 262147, 3, -1572903, 262147, 2, -1507367, 262147, 2, -1441831, 262147, 0, -1376295, 262147, 2, -1310759, 262147, 2, -1703974, 262147, 1, -1638438, 262147, 3, -1572902, 262147, 0, -1507366, 262147, 3, -1441830, 262147, 2, -1376294, 262147, 2, -1310758, 262147, 2, -1703973, 262147, 0, -1638437, 262147, 1, -1572901, 262147, 2, -1507365, 262147, 0, -1441829, 262147, 3, -1376293, 262147, 2, -1310757, 262147, 2, -1703972, 262147, 2, -1638436, 262147, 2, -1572900, 262147, 1, -1507364, 262147, 0, -1441828, 262147, 3, -1376292, 262147, 2, -1310756, 262147, 3, -1703971, 262147, 3, -1638435, 262147, 0, -1572899, 262147, 2, -1507363, 262147, 0, -1441827, 262147, 1, -1376291, 262147, 2, -1310755, 262147, 3, -1703970, 262147, 3, -1638434, 262147, 2, -1572898, 262147, 3, -1507362, 262147, 3, -1441826, 262147, 2, -1376290, 262147, 0, -1310754, 262147, 1, -1703969, 262147, 0, -1638433, 262147, 2, -1572897, 262147, 2, -1507361, 262147, 0, -1441825, 262147, 1, -1376289, 262147, 1, -1310753, 262147, 0, -1703968, 262147, 1, -1638432, 262147, 0, -1572896, 262147, 3, -1507360, 262147, 0, -1441824, 262147, 3, -1376288, 262147, 2, -1310752, 262147, 0, -1703967, 262147, 0, -1638431, 262147, 3, -1507368, 262147, 2, -1441832, 262147, 3, -1376296, 262147, 3, -1310760, 262147, 0, -1245224, 262147, 1, -1179688, 262147, 0, -1245223, 262147, 3, -1179687, 262147, 3, -1245222, 262147, 2, -1179686, 262147, 0, -1245221, 262147, 1, -1179685, 262147, 2, -1245220, 262147, 3, -1179684, 262147, 3, -1245219, 262147, 2, -1179683, 262147, 1, -1245218, 262147, 1, -1179682, 262147, 0, -1245217, 262147, 1, -1179681, 262147, 1, -1245216, 262147, 1, -1835042, 262147, 1, -1769506, 262147, 3, -1835041, 262147, 0, -1769505, 262147, 3, -1835040, 262147, 0, -1769504, 262147, 3, -1835039, 262147, 2, -1769503, 262147, 3, -1638430, 262147, 2, -2555940, 262147, 3, -2490404, 262147, 2, -2424868, 262147, 0, -2359332, 262147, 1, -2293796, 262147, 1, -2228260, 262147, 2, -2162724, 262147, 3, -2097188, 262147, 3, -2031652, 262147, 2, -1966116, 262147, 0, -1900580, 262147, 1, -1835044, 262147, 1, -1769508, 262147, 1, -2555939, 262147, 3, -2490403, 262147, 3, -2424867, 262147, 0, -2359331, 262147, 3, -2293795, 262147, 2, -2228259, 262147, 1, -2162723, 262147, 2, -2097187, 262147, 2, -2031651, 262147, 1, -1966115, 262147, 1, -1900579, 262147, 3, -1835043, 262147, 0, -1769507, 262147, 2, -2555938, 262147, 1, -2490402, 262147, 0, -2424866, 262147, 3, -2359330, 262147, 2, -2293794, 262147, 0, -2228258, 262147, 0, -2162722, 262147, 3, -2097186, 262147, 2, -2031650, 262147, 1, -1966114, 262147, 3, -1900578, 262147, 2, -2555937, 262147, 1, -2490401, 262147, 1, -2424865, 262147, 2, -2359329, 262147, 2, -2293793, 262147, 0, -2228257, 262147, 0, -2162721, 262147, 1, -2097185, 262147, 2, -2031649, 262147, 1, -1966113, 262147, 2, -1900577, 262147, 2, -2555936, 262147, 1, -2490400, 262147, 0, -2424864, 262147, 1, -2359328, 262147, 3, -2293792, 262147, 0, -2228256, 262147, 1, -2162720, 262147, 1, -2097184, 262147, 1, -2031648, 262147, 3, -1966112, 262147, 2, -1900576, 262147, 2, -2621474, 262147, 1, -2621473, 262147, 0, -2621472, 262147, 1, -2621471, 262147, 1, -2555935, 262147, 2, -2490399, 262147, 1, -2424863, 262147, 1, -2359327, 262147, 1, -2293791, 262147, 1, -2228255, 262147, 2, -2162719, 262147, 3, -2097183, 262147, 2, -2031647, 262147, 2, -1966111, 262147, 2, -1900575, 262147, 0, -196599, 196611, 3, -131057, 196611, 0, -196592, 3, 0, -131056, 262147, 0, -65521, 262147, 0)

[node name="UICanvasLayer" type="CanvasLayer" parent="."]

[node name="HealthUI" type="Control" parent="UICanvasLayer"]
layout_mode = 3
anchors_preset = 0
offset_right = 36.0
offset_bottom = 11.0
scale = Vector2(2, 2)
script = ExtResource("8_pbhce")
metadata/_edit_use_anchors_ = true

[node name="HealthEmpty" type="TextureRect" parent="UICanvasLayer/HealthUI"]
layout_mode = 0
offset_right = 36.0
offset_bottom = 11.0
texture = ExtResource("10_riaqi")
stretch_mode = 1

[node name="HealthFull" type="TextureRect" parent="UICanvasLayer/HealthUI"]
layout_mode = 1
offset_right = 36.0
offset_bottom = 11.0
texture = ExtResource("11_6rtka")
expand_mode = 1
stretch_mode = 1

[node name="Enemies" type="Node2D" parent="."]

[node name="Snails" type="Node2D" parent="Enemies"]

[node name="Snail4" parent="Enemies/Snails" instance=ExtResource("10_8x2u2")]
position = Vector2(-234, -990)

[node name="Snail3" parent="Enemies/Snails" instance=ExtResource("10_8x2u2")]
position = Vector2(296, -238)

[node name="Snail2" parent="Enemies/Snails" instance=ExtResource("10_8x2u2")]
position = Vector2(-93, 161)

[node name="Snail" parent="Enemies/Snails" instance=ExtResource("10_8x2u2")]
position = Vector2(198, 258)

[node name="Mosquitos" type="Node2D" parent="Enemies"]

[node name="Mosquito_5" parent="Enemies/Mosquitos" instance=ExtResource("7_17rfd")]
position = Vector2(-175, -2385)

[node name="Mosquito_4" parent="Enemies/Mosquitos" instance=ExtResource("7_17rfd")]
position = Vector2(0, -415)

[node name="Mosquito_3" parent="Enemies/Mosquitos" instance=ExtResource("7_17rfd")]
position = Vector2(-167, -1063)

[node name="Mosquito_2" parent="Enemies/Mosquitos" instance=ExtResource("7_17rfd")]
position = Vector2(160, -1631)

[connection signal="body_entered" from="PlayerCharacter/Area2D" to="PlayerCharacter" method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="PlayerCharacter/Area2D" to="PlayerCharacter" method="_on_area_2d_body_exited"]
